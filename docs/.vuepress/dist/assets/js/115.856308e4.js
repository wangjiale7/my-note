(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{475:function(t,e,s){"use strict";s.r(e);var a=s(42),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"大文件断点续传"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#大文件断点续传"}},[t._v("#")]),t._v(" 大文件断点续传")]),t._v(" "),s("h2",{attrs:{id:"整体思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#整体思路"}},[t._v("#")]),t._v(" 整体思路：")]),t._v(" "),s("p",[t._v("前端")]),t._v(" "),s("p",[t._v("前端大文件上传网上的大部分文章已经给出了解决方案，核心是利用 Blob.prototype.slice 方法，和数组的 slice 方法相似，调用的 slice 方法可以返回 原文件的某个切片")]),t._v(" "),s("p",[t._v("这样我们就可以根据预先设置好的切片最大数量将文件切分为一个个切片，然后借助 http 的可并发性，同时上传多个切片，这样从原本传一个大文件，变成了同时传多个小的文件切片，可以大大减少上传时间")]),t._v(" "),s("p",[t._v("另外由于是并发，传输到服务端的顺序可能会发生变化，所以我们还需要给每个切片记录顺序")])])}),[],!1,null,null,null);e.default=r.exports}}]);