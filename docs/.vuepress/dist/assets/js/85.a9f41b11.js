(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{444:function(a,s,t){"use strict";t.r(s);var n=t(42),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"hash-chunkhash-contenthash有什么区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hash-chunkhash-contenthash有什么区别"}},[a._v("#")]),a._v(" hash，chunkhash，contenthash有什么区别")]),a._v(" "),t("h2",{attrs:{id:"场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#场景"}},[a._v("#")]),a._v(" 场景")]),a._v(" "),t("p",[a._v("Webpack中hash、chunkhash和contenthash主要与浏览器缓存行为有关。 浏览器在初次请求服务端资源的时候，服务器给JS、CSS和图片等资源一个较长的缓存时间，我们通过给资源名称增加hash值来控制浏览器是否继续使用本地缓存。")]),a._v(" "),t("h2",{attrs:{id:"定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[a._v("#")]),a._v(" 定义")]),a._v(" "),t("p",[a._v("hash：表示所有文件哈希值相同，如果任意文件内容发生变化，则再次打包后，所有哈希值均改变且相同。即当任意module发生改变时，所有bundle的hash都改变且相同")]),a._v(" "),t("p",[a._v("chunkhash：根据不同的入口文(Entry)进行依赖文件解析，构建对应的chunk，生成对应的哈希值。也就是同一个入口使用同一个hash")]),a._v(" "),t("p",[a._v("contenthash：contenthash是针对文件内容级别的，只有你自己模块的内容变了，那么hash值才改变，所以我们可以通过contenthash解决上诉问题")]),a._v(" "),t("h2",{attrs:{id:"hash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hash"}},[a._v("#")]),a._v(" hash")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("output"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    filename"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"[name].[hash:8].js"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// hash => chunkhash")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h2",{attrs:{id:"chunkhash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chunkhash"}},[a._v("#")]),a._v(" chunkhash")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("output"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    filename"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"[name].[chunkhash].js"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// hash => chunkhash")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h2",{attrs:{id:"contenthash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#contenthash"}},[a._v("#")]),a._v(" contenthash")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("output"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    filename"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"[name].[contenthash].js"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// hash => chunkhash")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);